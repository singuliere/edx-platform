# # This is a Code Annotations automatically-generated Django model safelist file.
# # These models must be annotated as follows in order to be counted in the coverage report.
# # See https://code-annotations.readthedocs.io/en/latest/safelist.html for more information.
# #
# # fake_app_1.FakeModelName:
# #    ".. no_pii::": "This model has no PII"
# # fake_app_2.FakeModel2:
# #    ".. choice_annotation::": foo, bar, baz

auth.Group:
  ".. no_pii::" : "No PII"
auth.Permission:
  ".. no_pii::" : "No PII"
auth.User:
  ".. pii::": "username and email address"
  ".. pii_types::" : username, email_address
  ".. pii_retirement::" : local_api
contenttypes.ContentType:
  ".. no_pii::": "No PII"

# admin.LogEntry: {}
# assessment.Assessment: {}
# assessment.AssessmentFeedback: {}
# assessment.AssessmentFeedbackOption: {}
# assessment.AssessmentPart: {}
# assessment.Criterion: {}
# assessment.CriterionOption: {}
# assessment.PeerWorkflow: {}
# assessment.PeerWorkflowItem: {}
# assessment.Rubric: {}
# assessment.StaffWorkflow: {}
# assessment.StudentTrainingWorkflow: {}
# assessment.StudentTrainingWorkflowItem: {}
# assessment.TrainingExample: {}
# celery_utils.ChordData: {}
# celery_utils.FailedTask: {}
# completion.BlockCompletion: {}
# consent.DataSharingConsent: {}
# consent.DataSharingConsentTextOverrides: {}
# consent.HistoricalDataSharingConsent: {}
# degreed.DegreedEnterpriseCustomerConfiguration: {}
# degreed.DegreedGlobalConfiguration: {}
# degreed.DegreedLearnerDataTransmissionAudit: {}
# degreed.HistoricalDegreedEnterpriseCustomerConfiguration: {}
# django_openid_auth.Association: {}
# django_openid_auth.Nonce: {}
# django_openid_auth.UserOpenID: {}
# djcelery.CrontabSchedule: {}
# djcelery.IntervalSchedule: {}
# djcelery.PeriodicTask: {}
# djcelery.PeriodicTasks: {}
# djcelery.TaskMeta: {}
# djcelery.TaskSetMeta: {}
# djcelery.TaskState: {}
# djcelery.WorkerState: {}
# edx_oauth2_provider.TrustedClient: {}
# edx_proctoring.ProctoredExam: {}
# edx_proctoring.ProctoredExamReviewPolicy: {}
# edx_proctoring.ProctoredExamReviewPolicyHistory: {}
# edx_proctoring.ProctoredExamSoftwareSecureComment: {}
# edx_proctoring.ProctoredExamSoftwareSecureReview: {}
# edx_proctoring.ProctoredExamSoftwareSecureReviewHistory: {}
# edx_proctoring.ProctoredExamStudentAllowance: {}
# edx_proctoring.ProctoredExamStudentAllowanceHistory: {}
# edx_proctoring.ProctoredExamStudentAttempt: {}
# edx_proctoring.ProctoredExamStudentAttemptHistory: {}
# edxval.CourseVideo: {}
# edxval.EncodedVideo: {}
# edxval.Profile: {}
# edxval.ThirdPartyTranscriptCredentialsState: {}
# edxval.TranscriptPreference: {}
# edxval.Video: {}
# edxval.VideoImage: {}
# edxval.VideoTranscript: {}
# enterprise.EnrollmentNotificationEmailTemplate: {}
# enterprise.EnterpriseCourseEnrollment: {}
# enterprise.EnterpriseCustomer: {}
# enterprise.EnterpriseCustomerBrandingConfiguration: {}
# enterprise.EnterpriseCustomerCatalog: {}
# enterprise.EnterpriseCustomerEntitlement: {}
# enterprise.EnterpriseCustomerIdentityProvider: {}
# enterprise.EnterpriseCustomerReportingConfiguration: {}
# enterprise.EnterpriseCustomerType: {}
# enterprise.EnterpriseCustomerUser: {}
# enterprise.HistoricalEnrollmentNotificationEmailTemplate: {}
# enterprise.HistoricalEnterpriseCourseEnrollment: {}
# enterprise.HistoricalEnterpriseCustomer: {}
# enterprise.HistoricalEnterpriseCustomerCatalog: {}
# enterprise.HistoricalEnterpriseCustomerEntitlement: {}
# enterprise.PendingEnrollment: {}
# enterprise.PendingEnterpriseCustomerUser: {}
# integrated_channel.ContentMetadataItemTransmission: {}
# integrated_channel.LearnerDataTransmissionAudit: {}
# milestones.CourseContentMilestone: {}
# milestones.CourseMilestone: {}
# milestones.Milestone: {}
# milestones.MilestoneRelationshipType: {}
# milestones.UserMilestone: {}
# oauth2.AccessToken: {}
# oauth2.Client: {}
# oauth2.Grant: {}
# oauth2.RefreshToken: {}
# oauth2_provider.AccessToken: {}
# oauth2_provider.Application: {}
# oauth2_provider.Grant: {}
# oauth2_provider.RefreshToken: {}
# oauth_provider.Consumer: {}
# oauth_provider.Nonce: {}
# oauth_provider.Scope: {}
# oauth_provider.Token: {}
# organizations.Organization: {}
# organizations.OrganizationCourse: {}
# problem_builder.Answer: {}
# problem_builder.Share: {}
# redirects.Redirect: {}
# sap_success_factors.SAPSuccessFactorsEnterpriseCustomerConfiguration: {}
# sap_success_factors.SAPSuccessFactorsGlobalConfiguration: {}
# sap_success_factors.SapSuccessFactorsLearnerDataTransmissionAudit: {}
# sessions.Session: {}
# sites.Site: {}
# submissions.Score: {}
# submissions.ScoreAnnotation: {}
# submissions.ScoreSummary: {}
# submissions.StudentItem: {}
# submissions.Submission: {}
# user_tasks.UserTaskArtifact: {}
# user_tasks.UserTaskStatus: {}
# waffle.Flag: {}
# waffle.Sample: {}
# waffle.Switch: {}
# workflow.AssessmentWorkflow: {}
# workflow.AssessmentWorkflowCancellation: {}
# workflow.AssessmentWorkflowStep: {}
# xapi.XAPILRSConfiguration: {}
